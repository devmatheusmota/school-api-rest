// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  ADMIN
  TEACHER
  STUDENT
}

model Student {
  id          String       @id @default(uuid())
  name        String
  email       String
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  course_id   String?
  role        Roles        @default(STUDENT)
  Grade       Grade[] // 1xn relation
  Course      Course?      @relation(fields: [course_id], references: [id])
  StudentCard StudentCard?
}

model StudentCard {
  id         String   @id @default(uuid())
  due_date   DateTime
  student_id String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Student    Student  @relation(fields: [student_id], references: [id]) // 1x1 relation
}

model Teacher {
  id        String    @id @default(uuid())
  name      String
  email     String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Roles     @default(TEACHER)
  Subject   Subject[] // 1xn relation
  Course    Course[] // nxn relation
}

model Subject {
  id         String     @id @default(uuid())
  name       String
  teacher_id String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Teacher    Teacher    @relation(fields: [teacher_id], references: [id]) // 1xn relation
  Activity   Activity[]
}

model Course {
  id        String     @id @default(uuid())
  name      String
  year      Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Teacher   Teacher[] // 1xn relation
  Activity  Activity[] // 1xn relation
  Student   Student[] // 1xn relation
}

model Activity {
  id          String   @id @default(uuid())
  name        String
  description String
  due_date    DateTime
  course_id   String
  subject_id  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Course      Course   @relation(fields: [course_id], references: [id]) // 1xn relation
  Grade       Grade[] // 1xn relation
  Subject     Subject  @relation(fields: [subject_id], references: [id]) // 1xn relation
}

model Grade {
  id          String   @id @default(uuid())
  value       Float
  student_id  String
  activity_id String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Student     Student  @relation(fields: [student_id], references: [id]) // 1xn relation
  Activity    Activity @relation(fields: [activity_id], references: [id]) // 1xn relation
}
